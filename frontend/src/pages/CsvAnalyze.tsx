import CardSentiment from "@/components/CardSentiment";
import CardTotalAnalyzes from "@/components/CardTotalAnalyzes";
import {
	Card,
	CardContent,
	CardDescription,
	CardHeader,
	CardTitle,
} from "@/components/ui/card";
import { WordCloud } from "@/components/WordCloud";
import { useCsvAnalyzeStore } from "@/store/useCsvAnalyzeStore";
import { calculateStats } from "@/utils/calculateStats";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { SentimentTable } from "@/components/SentimentTable";
import { SentimentBarChart } from "@/components/SentimentBarChart";
import { SentimentDonutChart } from "@/components/SentimentDonutChart";
import { useState } from "react";
import type { Feedback } from "@/types/feedback";
import ModalFeedbackDetails from "@/components/ModalFeedbackDetails";

export function CsvAnalyze() {
	const { feedbacks } = useCsvAnalyzeStore();

	const [selectFeedback, setSelectFeedback] = useState<Feedback | null>(null);
	const [isDetailsFeedbackModalOpen, setIsDetailsFeedbackModalOpen] =
		useState(false);

	const {
		negativeCount,
		negativePercentage,
		neutralCount,
		neutralPercentage,
		positiveCount,
		positivePercentage,
		total,
	} = calculateStats(feedbacks);

	const handleSelectSentiment = (feedback: Feedback) => {
		setSelectFeedback(feedback);
		setIsDetailsFeedbackModalOpen((prev) => !prev);
	};

	return (
		<div className="flex flex-col gap-2">
			{isDetailsFeedbackModalOpen && feedbacks.length > 0 && (
				<ModalFeedbackDetails
					feedback={selectFeedback?.Text || ""}
					sentiment={selectFeedback?.Sentiment_Prediction || ""}
					onCloseModal={() => setIsDetailsFeedbackModalOpen((prev) => !prev)}
				/>
			)}
			<h2 className="text-3xl font-bold">Sentiment Analysis</h2>
			<p className="text-2xl font-regular text-gray-500">
				Visualize the insights generated by AI from your data
			</p>

			{feedbacks.length === 0 && (
				<div className="flex justify-center mt-60">
					<p className="text-2xl font-regular text-gray-500 ">
						No data available for analysis. Please upload a CSV file.
					</p>
				</div>
			)}

			{feedbacks.length > 0 && (
				<>
					<div className="grid gap-4 md:grid-cols-2 xl:grid-cols-4 mt-4">
						<CardTotalAnalyzes total={total} />
						<CardSentiment
							sentiment="positive"
							title="Positive Sentiment"
							count={positiveCount}
							percentage={positivePercentage}
							total={total}
						/>
						<CardSentiment
							sentiment="neutral"
							title="Neutral Sentiment"
							count={neutralCount}
							percentage={neutralPercentage}
							total={total}
						/>
						<CardSentiment
							sentiment="negative"
							title="Negative Sentiment"
							count={negativeCount}
							percentage={negativePercentage}
							total={total}
						/>
					</div>

					<div className="grid gap-4 md:grid-cols-2 mt-4">
						<Card className="col-span-1">
							<CardHeader>
								<CardTitle>Sentiment Distribution</CardTitle>
								<CardDescription>
									Percentage analysis of the detected sentiments
								</CardDescription>
							</CardHeader>
							<CardContent>
								<SentimentDonutChart
									negativeCount={negativeCount}
									neutralCount={neutralCount}
									positiveCount={positiveCount}
									total={total}
									negativePercentage={negativePercentage}
									neutralPercentage={neutralPercentage}
									positivePercentage={positivePercentage}
								/>
							</CardContent>
						</Card>
						<Card className="col-span-1">
							<CardHeader>
								<CardTitle>Overview</CardTitle>
								<CardDescription>
									Summary of the sentiment analysis
								</CardDescription>
							</CardHeader>
							<CardContent className="pl-2">
								<SentimentBarChart
									negativeCount={negativeCount}
									negativePercentage={negativePercentage}
									neutralCount={neutralCount}
									neutralPercentage={neutralPercentage}
									positiveCount={positiveCount}
									positivePercentage={positivePercentage}
									total={total}
								/>
							</CardContent>
						</Card>
					</div>

					<div className="mt-4">
						<Card>
							<CardHeader>
								<CardTitle>Word Cloud</CardTitle>
								<CardDescription>
									Words most frequent in feedbacks
								</CardDescription>
							</CardHeader>
							<CardContent>
								<WordCloud />
							</CardContent>
						</Card>
					</div>

					<div className="mt-4">
						<Tabs defaultValue="all">
							<div className="flex items-center justify-between">
								<TabsList>
									<TabsTrigger value="all">All</TabsTrigger>
									<TabsTrigger value="positive">Positive</TabsTrigger>
									<TabsTrigger value="neutral">Neutral</TabsTrigger>
									<TabsTrigger value="negative">Negative</TabsTrigger>
								</TabsList>
							</div>

							<TabsContent value="all" className="mt-4">
								<SentimentTable
									onClickSentiment={handleSelectSentiment}
									data={feedbacks}
								/>
							</TabsContent>

							<TabsContent value="positive" className="mt-4">
								<SentimentTable
									onClickSentiment={handleSelectSentiment}
									data={feedbacks.filter(
										(item) => item.Sentiment_Prediction === "positivo",
									)}
								/>
							</TabsContent>

							<TabsContent value="neutral" className="mt-4">
								<SentimentTable
									onClickSentiment={handleSelectSentiment}
									data={feedbacks.filter(
										(item) => item.Sentiment_Prediction === "neutro",
									)}
								/>
							</TabsContent>

							<TabsContent value="negative" className="mt-4">
								<SentimentTable
									onClickSentiment={handleSelectSentiment}
									data={feedbacks.filter(
										(item) => item.Sentiment_Prediction === "negativo",
									)}
								/>
							</TabsContent>
						</Tabs>
					</div>
				</>
			)}
		</div>
	);
}
